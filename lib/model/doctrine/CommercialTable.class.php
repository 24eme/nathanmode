<?php

/**
 * CommercialTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CommercialTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object CommercialTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Commercial');
    }

    public function findByParameters($parameters)
    {

        return $this->findAll();
    }

    public function findFavorites($parameters)
    {
        $ids = $this->getIdsByParameters($parameters, 9);

        if(count($ids)) {
            $query = Doctrine_Query::create()->from('Commercial c')->whereIn('c.id', $ids);
            $items = $query->execute();
            $itemsById = array();
            foreach($items as $item) {
                $itemsById[$item->id] = $item;
            }
            return array_replace(array_flip($ids), $itemsById);
        }

        return $query->execute();
    }

    protected function getIdsByParameters($parameters, $limit = null) {
        $from = (isset($parameters['from']) && !empty($parameters['from']))? $parameters['from'] : null;
        $to = (isset($parameters['to']) && !empty($parameters['to']))? $parameters['to'] : null;
        $saison = (isset($parameters['saison']) && !empty($parameters['saison']))? $parameters['saison'] : null;

        $where = "";

        if ($from && $to) {
            $where .= " AND b.date <= '".$to."' AND b.date >= '".$from."'";
        }
        if ($saison) {
            $where .= " AND b.saison_id = ".$saison;
        }

        $req = "SELECT commercial_id, sum(b.montant) as total FROM commande b WHERE b.montant >  0".$where." GROUP BY b.commercial_id HAVING total > 0 ORDER BY total DESC";
        if ($limit) {
            $req .= " LIMIT $limit";
        }
        $result = Doctrine_Manager::getInstance()->getCurrentConnection()->fetchAssoc($req);
        $ids = array();
        foreach ($result as $item) {
            $ids[] = $item['commercial_id'];
        }
        return $ids;
    }
}
