<?php

/**
 * ClientTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ClientTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ClientTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Client');
    }

    public function findByParameters($parameters)
    {
		$ids = $this->getIdsByParameters($parameters);

        if(count($ids)) {
		    $query = Doctrine_Query::create()->from('Client c')->whereIn('c.id', $ids);
            $items = $query->execute();
            $itemsById = array();
            foreach($items as $item) {
                $itemsById[$item->id] = $item;
            }
            return array_replace(array_flip($ids), $itemsById);
        }

		return $this->findAll();
    }

    public function findFavorites($parameters)
    {
        $ids = $this->getIdsByParameters($parameters, 9);

        if(count($ids)) {
		    $query = Doctrine_Query::create()->from('Client c')->whereIn('c.id', $ids);
            $items = $query->execute();
            $itemsById = array();
            foreach($items as $item) {
                $itemsById[$item->id] = $item;
            }
            return array_replace(array_flip($ids), $itemsById);
        }

        $query = Doctrine_Query::create()->from('Client c')->whereIn('c.id', array(10,4,75,22,1,3,63,355,13));

        return $query->execute();
    }

    protected function getIdsByParameters($parameters, $limit = null) {
        $fournisseur = (isset($parameters['fournisseur']) && !empty($parameters['fournisseur']))? $parameters['fournisseur'] : null;
        $commercial = (isset($parameters['commercial']) && !empty($parameters['commercial']))? $parameters['commercial'] : null;
        $from = (isset($parameters['from']) && !empty($parameters['from']))? $parameters['from'] : null;
        $to = (isset($parameters['to']) && !empty($parameters['to']))? $parameters['to'] : null;
        $saison = (isset($parameters['saison']) && !empty($parameters['saison']))? $parameters['saison'] : null;

    	$where = "";
        if($fournisseur) {
            $where .= " AND b.fournisseur_id = ".$fournisseur;
        }
        if($commercial) {
            $where .= " AND b.commercial_id = ".$commercial;
        }

        if (!$where) {
            return array();
        }

        if ($from && $to) {
    		$where .= " AND b.date <= '".$to."' AND b.date >= '".$from."'";
    	}
		if ($saison) {
			$where .= " AND b.saison_id = ".$saison;
		}

    	$req = "SELECT client_id, sum(b.montant) as total FROM commande b WHERE b.montant >  0".$where." GROUP BY b.client_id HAVING total > 0 ORDER BY total DESC";
    	if ($limit) {
    		$req .= " LIMIT $limit";
    	}
    	$result = Doctrine_Manager::getInstance()->getCurrentConnection()->fetchAssoc($req);
    	$ids = array();
    	foreach ($result as $item) {
    		$ids[] = $item['client_id'];
    	}
    	return $ids;
    }

    public function getListeTriee() {
        $result = array();
        $clients = $this->findAll();
        foreach ($clients as $client) {
            $result[$client->id] = $client->raison_sociale;
        }

        uasort($result, function ($a, $b) {
            $aA = ($a[0] == 'E')? substr($a, -4) : '20'.substr($a, -2);
            $aB = ($b[0] == 'E')? substr($b, -4) : '20'.substr($b, -2);
            return $aA <=> $aB;
        });
        return $result;
    }
}
