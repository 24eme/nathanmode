<?php

/**
 * BaseDevise
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $libelle
 * @property string $symbole
 * @property boolean $is_pourcentage
 * @property Doctrine_Collection $Fournisseurs
 * @property Doctrine_Collection $Commerciaux
 * @property Doctrine_Collection $Coupes
 * @property Doctrine_Collection $PrixSpecialDetails
 * @property Doctrine_Collection $Collections
 * @property Doctrine_Collection $CollectionDetails
 * @property Doctrine_Collection $CollectionLivraisons
 * @property Doctrine_Collection $Bons
 * @property Doctrine_Collection $Commandes
 * 
 * @method string              getLibelle()              Returns the current record's "libelle" value
 * @method string              getSymbole()              Returns the current record's "symbole" value
 * @method boolean             getIsPourcentage()        Returns the current record's "is_pourcentage" value
 * @method Doctrine_Collection getFournisseurs()         Returns the current record's "Fournisseurs" collection
 * @method Doctrine_Collection getCommerciaux()          Returns the current record's "Commerciaux" collection
 * @method Doctrine_Collection getCoupes()               Returns the current record's "Coupes" collection
 * @method Doctrine_Collection getPrixSpecialDetails()   Returns the current record's "PrixSpecialDetails" collection
 * @method Doctrine_Collection getCollections()          Returns the current record's "Collections" collection
 * @method Doctrine_Collection getCollectionDetails()    Returns the current record's "CollectionDetails" collection
 * @method Doctrine_Collection getCollectionLivraisons() Returns the current record's "CollectionLivraisons" collection
 * @method Doctrine_Collection getBons()                 Returns the current record's "Bons" collection
 * @method Doctrine_Collection getCommandes()            Returns the current record's "Commandes" collection
 * @method Devise              setLibelle()              Sets the current record's "libelle" value
 * @method Devise              setSymbole()              Sets the current record's "symbole" value
 * @method Devise              setIsPourcentage()        Sets the current record's "is_pourcentage" value
 * @method Devise              setFournisseurs()         Sets the current record's "Fournisseurs" collection
 * @method Devise              setCommerciaux()          Sets the current record's "Commerciaux" collection
 * @method Devise              setCoupes()               Sets the current record's "Coupes" collection
 * @method Devise              setPrixSpecialDetails()   Sets the current record's "PrixSpecialDetails" collection
 * @method Devise              setCollections()          Sets the current record's "Collections" collection
 * @method Devise              setCollectionDetails()    Sets the current record's "CollectionDetails" collection
 * @method Devise              setCollectionLivraisons() Sets the current record's "CollectionLivraisons" collection
 * @method Devise              setBons()                 Sets the current record's "Bons" collection
 * @method Devise              setCommandes()            Sets the current record's "Commandes" collection
 * 
 * @package    nathanmode
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDevise extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('devise');
        $this->hasColumn('libelle', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('symbole', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('is_pourcentage', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Fournisseur as Fournisseurs', array(
             'local' => 'id',
             'foreign' => 'devise_id'));

        $this->hasMany('Commercial as Commerciaux', array(
             'local' => 'id',
             'foreign' => 'devise_id'));

        $this->hasMany('Coupe as Coupes', array(
             'local' => 'id',
             'foreign' => 'devise_id'));

        $this->hasMany('PrixSpecialDetail as PrixSpecialDetails', array(
             'local' => 'id',
             'foreign' => 'devise_id'));

        $this->hasMany('Collection as Collections', array(
             'local' => 'id',
             'foreign' => 'devise_fournisseur_id'));

        $this->hasMany('CollectionDetail as CollectionDetails', array(
             'local' => 'id',
             'foreign' => 'devise_id'));

        $this->hasMany('CollectionLivraison as CollectionLivraisons', array(
             'local' => 'id',
             'foreign' => 'devise_id'));

        $this->hasMany('Bon as Bons', array(
             'local' => 'id',
             'foreign' => 'devise_escompte_id'));

        $this->hasMany('Commande as Commandes', array(
             'local' => 'id',
             'foreign' => 'devise_montant_id'));
    }
}